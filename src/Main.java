public class Main {
    public static void main(String[] args) {
       // int id = Employee.getDepartmentId();
        Employee[] employee = new Employee[10];
        employee[0] = new Employee(1, "Булгакова",
                "София", "Леоновна", 32890);
        employee[1] = new  Employee(2, "Родина",
                "Александра", "Артемьевна", 31575);
        employee[2] = new  Employee(3, "Зайцева",
                "Елизавета", "Ивановна", 34099);
        employee[3] = new  Employee(4, "Демин",
                "Матвей", "Андреевич", 27829);
        employee[4] = new  Employee(5, "Румянцев",
                "Илья", "Никитич", 32547);
        employee[5] = new  Employee(2, "Лопатин",
                "Тимофей", "Викторович", 30776);
        employee[6] = new  Employee(1, "Котова",
                "Сафия", "Михайловна", 29791);
        employee[7] = new  Employee(1, "Федосеев",
                "Алексей", "Львович", 35112);
        employee[8] = new  Employee(4, "Смирнов",
                "Александр", "Александрович", 33001);
        employee[9] = new  Employee(4, "Кузьмина",
                "Мария", "Максимовна", 33553);

        for (int id = 0; id < employee.length - 1; id++) {
            System.out.println(employee[id]);
        }
    }
}


//Создать класс Employee, который содержит информацию о ФИО, отделе и зарплате
// сотрудника. Отделы для простоты должны быть названы от 1 до 5.
// Добавить статическую переменную-счетчик, которая будет отвечать за id.
// Добавить в класс Employee поле id, которое проставляется из счетчика,
// а затем счетчик увеличивает свое значение.
// Скрыть прямой доступ к полям класса Employee и добавить возможность
// получать значения полей (геттеры) и устанавливать значения полей отдела и
// зарплаты (сеттеры). Реализовать в классе Employee контракты equals и hashCode.
// По-умолчанию все поля должны передавать через конструктор (кроме id) и
// заполняться в нем (включая id, который нужно получить из счетчика).
// Создать внутри класса Main метод main и поле типа Employee[10], которое
// будет выполнять роль "хранилища" для записей о сотрудниках.
// Создать статические методы, которые будут взаимодействовать с массивом
// из пункта 6 и возвращать результат:
// Получить список всех сотрудников со всеми имеющимися по ним данными
// (вывести в консоль значения всех полей (toString));
// Посчитать сумму затрат на ЗП в месяц;
// Найти сотрудника с минимальной ЗП;
// Найти сотрудника с максимальной ЗП;
// Подсчитать среднее значение зарплат (можно использовать для этого метод из пункта b);